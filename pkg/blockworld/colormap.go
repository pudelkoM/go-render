package blockworld

// Maps a float value t in the range [0, 1] to a color in the Viridis colormap.
func Viridis(t float64) Vec3 {
	c0 := Vec3{0.2777273272234177, 0.005407344544966578, 0.3340998053353061}
	c1 := Vec3{0.1050930431085774, 1.404613529898575, 1.384590162594685}
	c2 := Vec3{-0.3308618287255563, 0.214847559468213, 0.09509516302823659}
	c3 := Vec3{-4.634230498983486, -5.799100973351585, -19.33244095627987}
	c4 := Vec3{6.228269936347081, 14.17993336680509, 56.69055260068105}
	c5 := Vec3{4.776384997670288, -13.74514537774601, -65.35303263337234}
	c6 := Vec3{-5.435455855934631, 4.645852612178535, 26.3124352495832}

	return c6.Mul(t).Add(c5).Mul(t).Add(c4).Mul(t).Add(c3).Mul(t).Add(c2).Mul(t).Add(c1).Mul(t).Add(c0)
}

func Plasma(t float64) Vec3 {
	c0 := Vec3{0.05873234392399702, 0.02333670892565664, 0.5433401826748754}
	c1 := Vec3{2.176514634195958, 0.2383834171260182, 0.7539604599784036}
	c2 := Vec3{-2.689460476458034, -7.455851135738909, 3.110799939717086}
	c3 := Vec3{6.130348345893603, 42.3461881477227, -28.51885465332158}
	c4 := Vec3{-11.10743619062271, -82.66631109428045, 60.13984767418263}
	c5 := Vec3{10.02306557647065, 71.41361770095349, -54.07218655560067}
	c6 := Vec3{-3.658713842777788, -22.93153465461149, 18.19190778539828}

	return c6.Mul(t).Add(c5).Mul(t).Add(c4).Mul(t).Add(c3).Mul(t).Add(c2).Mul(t).Add(c1).Mul(t).Add(c0)
}

func Magma(t float64) Vec3 {
	c0 := Vec3{-0.002136485053939582, -0.000749655052795221, -0.005386127855323933}
	c1 := Vec3{0.2516605407371642, 0.6775232436837668, 2.494026599312351}
	c2 := Vec3{8.353717279216625, -3.577719514958484, 0.3144679030132573}
	c3 := Vec3{-27.66873308576866, 14.26473078096533, -13.64921318813922}
	c4 := Vec3{52.17613981234068, -27.94360607168351, 12.94416944238394}
	c5 := Vec3{-50.76852536473588, 29.04658282127291, 4.23415299384598}
	c6 := Vec3{18.65570506591883, -11.48977351997711, -5.601961508734096}

	return c6.Mul(t).Add(c5).Mul(t).Add(c4).Mul(t).Add(c3).Mul(t).Add(c2).Mul(t).Add(c1).Mul(t).Add(c0)
}

func Inferno(t float64) Vec3 {
	c0 := Vec3{0.0002189403691192265, 0.001651004631001012, -0.01948089843709184}
	c1 := Vec3{0.1065134194856116, 0.5639564367884091, 3.932712388889277}
	c2 := Vec3{11.60249308247187, -3.972853965665698, -15.9423941062914}
	c3 := Vec3{-41.70399613139459, 17.43639888205313, 44.35414519872813}
	c4 := Vec3{77.162935699427, -33.40235894210092, -81.80730925738993}
	c5 := Vec3{-71.31942824499214, 32.62606426397723, 73.20951985803202}
	c6 := Vec3{25.13112622477341, -12.24266895238567, -23.07032500287172}

	return c6.Mul(t).Add(c5).Mul(t).Add(c4).Mul(t).Add(c3).Mul(t).Add(c2).Mul(t).Add(c1).Mul(t).Add(c0)
}

// Helper functions to clamp output values to the range [0, 1].

func ViridisClamp(t float64) Vec3 {
	return Viridis(t).Clamp(0, 1)
}

func PlasmaClamp(t float64) Vec3 {
	return Plasma(t).Clamp(0, 1)
}

func MagmaClamp(t float64) Vec3 {
	return Magma(t).Clamp(0, 1)
}

func InfernoClamp(t float64) Vec3 {
	return Inferno(t).Clamp(0, 1)
}
